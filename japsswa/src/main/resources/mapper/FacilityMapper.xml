<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.mes.jss.facility.mapper.FacilityMapper">
  
  	<!-- 비가동 페이지 -->    	
  	
  	<select id="getList" resultType="FacilityVO">
  		SELECT	fac_name, 
  		            fac_code, 
  		            fac_manager nameText, GET_EMPNAME(fac_manager) facManager, 
  		            fac_status, 
  		            get_fac_start_date(fac_code) as start_date
		  FROM  facility 
		ORDER  BY fac_code
  	</select>
  	
  	<select id="getdownList" resultType="DowntimeVO">  				
        select  f.fac_name,
        		  f.fac_code,
        		  d.down_code,
        		  to_char(d.stop_date, 'YYYY/MM/DD HH24:MI:SS') as stop_date,
        		  d.down_reason text, GET_CODENAME(d.down_reason) downReason,
        		  d.down_manager nameText, GET_EMPNAME(d.down_manager) downManager,
        		  d.remark
		  from  facility f join downtime d
		     on  (f.fac_code = d.fac_code)
		where  d.start_date is null
     order by down_code desc
  	</select>
  	
  	<insert id="insertDownList" parameterType="DowntimeVO">  				
		insert into downtime(
			           down_code, 
			           stop_date, 
			           down_reason, 
			           down_manager, 
			           remark, 
			           fac_code)
			values  (('DOW' || to_char(sysdate, 'yyMMdd') || lpad(downtime_seq.nextval, 4, '0')),
			           current_date,
			           #{text},
			           #{nameText} ,
			           #{remark} , 
			           #{facCode})
  	</insert>
  	
  	<update id="updateFacStatus" parameterType="FacilityVO">
  		update facility 
  		     set 
  		          fac_status = case	when fac_status = 'Y' then 'N'
		                                    else   fac_status	end
		where fac_code = #{facCode}
  	</update>
  	
  	<update id="newUpdateFacStatus" parameterType="FacilityVO">
  		update facility 
  			set 
  		          fac_status = case  when fac_status = 'N' then 'Y'
		                             		else   fac_status	end
		where fac_code = #{facCode}
  	</update>
  	
  	<update id="insertStartTime" parameterType="DowntimeVO">
  		update downtime 
  			set 
  				  start_date = current_date 
  	     where fac_code = #{facCode}
  	</update>  	 
  	
  	<delete id="deleteDownCode">
  		delete from downtime 
  			 where 	 down_code = #{downCode}
  	</delete>
  	
  	<update id="updateDownTime" parameterType="DowntimeVO">
  		update downtime 
  			set
  		          down_reason = #{text} , 
  		          down_manager = #{nameText} , 
  		          remark = #{remark} 
  		 where down_code = #{downCode}
  	</update>
  	
  	<!-- 비가동 내역 페이지 -->
  	
  	<select id="getDownDetailList" resultType="DowntimeVO">
  		select  f.fac_name, 
  				  f.fac_code , 
  				  d.down_code,   				  
  				  to_char(d.start_date, 'YYYY/MM/DD HH24:MI:SS') as start_date, 
  				  to_char(d.stop_date, 'YYYY/MM/DD HH24:MI:SS') as stop_date,
  				  d.down_reason text, GET_CODENAME(d.down_reason) downReason,
        		  d.down_manager nameText, GET_EMPNAME(d.down_manager) downManager,   				     				  
  				  d.remark
		from   facility f join downtime d 
		on      (f.fac_code = d.fac_code) 
		order by down_code desc
  	</select>
  	
  	<select id="searchlist" parameterType="FacilityVO" resultType="FacilityVO">
  		select d.down_code, 
  				  f.fac_code,
  				  f.fac_name, 
  				  to_char(d.start_date, 'YYYY/MM/DD HH24:MI:SS') as start_date, 
  				  to_char(d.stop_date, 'YYYY/MM/DD HH24:MI:SS') as stop_date,
  				  d.down_reason text, GET_CODENAME(d.down_reason) downReason,
        		  d.down_manager nameText, GET_EMPNAME(d.down_manager) downManager,
  				  d.remark
		from   downtime d join facility f 
		   on   (f.fac_code = d.fac_code)
		where fac_name like '%' || #{facName} || '%' 
	    <if test="startDate != '' and stopDate != '' ">	    	    	    
	    and TRUNC(d.stop_date) between to_date(#{startDate}, 'YYYY-MM-DD HH24:MI:SS') and to_date(#{stopDate}, 'YYYY-MM-DD HH24:MI:SS')
	    </if>
  	</select>
  	
  	<!-- 설비 페이지 -->
  	
  	<select id="getAllList" resultType="FacilityVO">
  		select f.fac_code, fac_name, to_char(f.fac_date, 'YYYY-MM-DD') as fac_date ,f.pro_code, p.pro_name, f.fac_status, f.wash_cycle, f.ins_cycle, 
		to_char(f.last_inspection, 'YYYY-MM-DD') as last_inspection, 		
		f.fac_manager nameText,
		GET_EMPNAME(f.fac_manager) facManager,
		f.fac_function text,
		GET_CODENAME(f.fac_function) facFunction,
		f.fac_picture
		from facility f left outer join process p on(f.pro_code = p.pro_code)
		order by fac_code desc
  		
  		<!--  
  		select fac_code, fac_name, to_char(fac_date, 'YYYY-MM-DD') as fac_date , fac_process, fac_status, wash_cycle, ins_cycle, to_char(last_inspection, 'YYYY-MM-DD') as last_inspection, fac_manager, fac_function, fac_picture
		from facility
		-->
  	</select>
  	
  	<select id="searchFac" parameterType="FacilityVO" resultType="FacilityVO">
  		select f.fac_code, fac_name, to_char(f.fac_date, 'YYYY-MM-DD') as fac_date , p.pro_name, f.fac_status, f.wash_cycle, f.ins_cycle, 
		to_char(f.last_inspection, 'YYYY-MM-DD') as last_inspection, 
		f.fac_manager nameText,
		GET_EMPNAME(f.fac_manager) facManager,
		f.fac_function text,
		GET_CODENAME(f.fac_function) facFunction,
		 f.fac_picture 
		from facility f join process p on(f.pro_code = p.pro_code)
		where fac_name like '%' || #{facName} || '%'
  		
  		<!-- 
  		select * from facility where fac_name like '%' || #{facName} || '%'
  		-->
  	</select>
  	
  	<select id="getfunctionList">
  		select deta_code value , deta_name text 
  		 from details_comm 
  		where comm_code = UPPER(#{commCode})
  	</select>
  	
  	<insert id="insertFacility" parameterType="FacilityVO">
  		insert into facility (fac_code , fac_name , fac_date, pro_code ,
  		wash_cycle, ins_cycle, last_inspection, fac_manager, fac_function)
        values(('FAC' || to_char(sysdate, 'yyMMdd') || lpad(facility_seq.nextval, 4,'0')) , #{facName} , TO_DATE(#{facDate}, 'yyyy-MM-dd') , #{proCode}, 
        #{washCycle},#{insCycle}, #{lastInspection}, #{nameText}, #{text})
  	</insert>
  	
  	<update id="modifyFac" parameterType="FacilityvO">
  		update facility   		
  					set
					  		fac_name = #{facName}, 
					  		fac_date = TO_DATE(#{facDate}, 'yyyy-MM-dd'), 
					  		pro_code = #{proCode},
					  		wash_cycle = #{washCycle} ,
					  		ins_cycle = #{insCycle},
					  		last_inspection = #{lastInspection}, 
					  		fac_manager = #{nameText},
					  		fac_function = #{text},
							fac_picture = #{facPicture}		
  				  where  fac_code = #{facCode}
  	</update>
  	
  	<delete id="deleteFac">
  		delete from facility where fac_code = #{facCode} 
  	</delete>
  	
  	<!-- 점검 관리 페이지 -->
  	
  	<select id="getbeInsList" resultType="InspectionVO">
  		select f.fac_name, f.fac_code , d.down_code, GET_CODENAME(d.down_reason) downReason, d.stop_date
		from facility f full outer join downtime d on(f.fac_code = d.fac_code) full outer join inspection i on(d.down_code = i.down_code)
		where down_reason = 'DIN' and ins_code is null and f.fac_code is not null order by down_code desc
  	</select>
  	
  	<select id="getInsList" resultType="InspectionVO">
  		select f.fac_name, i.fac_code, i.down_code, i.ins_code, to_char(i.ins_date, 'YYYY-MM-DD') as ins_date,
  				  to_char(i.ins_date + REGEXP_REPLACE(f.ins_cycle, '[^0-9]'),'YYYY-MM-DD') as next_inspection,
                 i.ins_reason text, GET_CODENAME(i.ins_reason) insReason,                
                 i.ins_history, i.judgment, i.part_history, i.part_reason, to_char(i.part_date, 'yyyy-MM-dd') as part_date,
				 i.ins_manager nameText, GET_EMPNAME(i.ins_manager) insManager
		from facility f join inspection i on(f.fac_code = i.fac_code)
		where ins_code is not null
		order by ins_code desc
  		<!-- 
  		select distinct f.fac_name, f.fac_code, d.down_code, i.ins_code, to_char(i.ins_date, 'YYYY-MM-DD')as ins_date, i.ins_reason, i.ins_history, i.judgment, i.part_history, i.part_reason, i.part_date, i.ins_manager
		from facility f right join downtime d on(f.fac_code = d.fac_code) right join inspection i on(d.down_code = i.down_code)
		where ins_code is not null
		-->
  	</select>  	
  	
  	<insert id="insertModalIns" parameterType="InspectionVO">
  		insert into inspection(ins_code, ins_date, ins_reason, ins_history, judgment, part_history, part_reason, part_date, ins_manager, fac_code, down_code)
		values(('INS' || to_char(sysdate, 'yyMMdd') || lpad(inspection_seq.nextval, 4,'0')) , current_date, #{text}, #{insHistory}, #{judgment}, #{partHistory}, #{partReason}, to_date(#{partDate}, 'yyyy-MM-dd'), #{nameText}, #{facCode}, #{downCode})
  	</insert>
  	
  	<update id="modifyFacDate" parameterType="InspectionVO">
  		update facility	
  					set
					  		last_inspection = sysdate 					  		
  				  where  fac_code = #{facCode}
  	</update>
  	
  	<select id="getSelList" resultType="FacilityVO">
  		select fac_name, fac_code from facility
  	</select>
  	<update id="modifyIns" parameterType="InspectionVO">
  		update inspection   		
  					set
					  		ins_date = to_date(#{insDate}, 'yyyy-MM-dd'), 
					  		ins_reason = #{text} , 
					  		ins_history = #{insHistory},
					  		judgment = #{judgment} ,
					  		ins_manager = #{nameText},
					  		part_history = #{partHistory}, 
					  		part_reason = #{partReason},
					  		part_date = 	to_date(#{partDate}, 'yyyy-MM-dd')
  				  where  ins_code = #{insCode}
  	</update>
  	  
  	<delete id="deleteIns">
  		delete from inspection where ins_code = #{insCode} 
  	</delete>
  	
  	<select id="searchInsList" parameterType="InspectionVO" resultType="InspectionVO">
  		select f.fac_name, i.fac_code, i.down_code, i.ins_code, to_char(i.ins_date, 'YYYY-MM-DD')as ins_date,
  				to_char(i.ins_date + REGEXP_REPLACE(f.ins_cycle, '[^0-9]'),'YYYY-MM-DD') as next_inspection,
                i.ins_reason text, GET_CODENAME(i.ins_reason) insReason,
                i.ins_history, i.judgment, i.part_history, i.part_reason, i.part_date,
                i.ins_manager nameText, GET_EMPNAME(i.ins_manager) insManager
		from facility f join inspection i on(f.fac_code = i.fac_code)
		where ins_code is not null and f.fac_name like '%' || #{facName} || '%'
         <if test="startDate != '' and stopDate != '' ">	    	    	    
	    and TRUNC(i.ins_date) between to_date(#{startDate}, 'yyyy-MM-dd') and to_date(#{stopDate}, 'yyyy-MM-dd')
	    </if>
	    order by i.ins_code desc
  	</select>
  	
  	
  	<select id="getDetailList" resultType ="CommVO">
  		select deta_code value , deta_name text 
  		 from details_comm 
  		where comm_code = UPPER(#{commCode})
  	</select>
  	
  	<select id="getEmpList" resultType = "EmpVO">
  		select emp_no value, emp_name text 
  		from emp
  		where dept_name = '설비'
  	</select>
  	
  </mapper>
  
  
