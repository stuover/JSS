<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.mes.jss.quality.mapper.QualityMapper">
  		<select id="getList" resultType="QualityVO">
  		
  		select q.test_code, e.emp_name,q.item_code,q.mr_order_det_code,i.item_type,i.item_name,q.situation,q.end_date,q.test_quantity,q.err_quantity,q.pass_quantity,((q.err_quantity/(q.test_quantity))*100) error,q.test_note 
  		from itemlist i join quality_test q on(i.item_code = q.item_code) join emp e on(q.emp_no=e.emp_no) 
  		where test_note is null and (q.err_quantity/q.test_quantity)*100 between 0 and 9
  		
  		</select>  
  		
  		
  		<select id ="qualityList" resultType="QualityVO">
  			select test_code, MR_ORDER_DET_CODE, a.item_Code, item_Name,situation, test_Quantity, test_Note, item_type
  			from quality_test a join itemlist b
  			on a.item_code = b.item_code
  			where situation = '검사대기'
  			order by test_code
  		</select>
  
  		<select id = "getCheckList" resultType="CheckListVO">
  			select checklist_code, test_name, fac_name, test_standard from checklist where item_code = #{itemCode}
  		
  		</select>
  		
  		<update id="updateQuality" parameterType="QualityVO">
  			update Quality_test
  			set end_date = sysdate,
  				err_quantity = #{errQuantity},
  				pass_quantity = #{testQuantity} - #{errQuantity},
  				defective_rate = #{errQuantity} / #{testQuantity}*100,
  				situation = '검사완료'
  			where test_Code = #{testCode}
  		</update>
  		
  		<update id="samUpdateQuality" parameterType="QualityVO">
  			update Quality_test
  			set end_date = sysdate,
  				err_quantity = #{errQuantity},
  				pass_quantity = (#{testQuantity} - #{errQuantity}),
  				defective_rate = (#{errQuantity} / #{testQuantity} * 100),
  				situation = '검사완료',
  				test_note = #{testNote}
  			where testCode = #{testCode}
  		</update>
  		
  		
  		<insert id="insertHistory" parameterType="TestHistoryVO">
  			insert into test_history values (history_seq.nextval, #{checklistCode}, #{testResult}, #{mrCount}, #{testCode})
  		</insert>
  		
  		
  		
  		
  	
  </mapper>