<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mes.jss.quality.mapper.QualityMapper">
	<sql id="criteria">

		<if test="searchSel != null and searchSel != ''.toString()">
			and item_type = (select deta_name from details_comm where deta_code =  #{searchSel})
		</if>
		<if test="searchInp != null and searchInp != ''.toString()">
			and ( test_code like '%'||#{searchInp}||'%'
			or a.item_code Like '%'||#{searchInp}||'%'
			or item_name Like '%'||#{searchInp}||'%'
			or mr_order_det_code like '%'||#{searchInp}||'%')
		</if>

	</sql>
	<select id="getList" resultType="QualityVO">

		select q.test_code,
		e.emp_name,q.item_code,q.mr_order_det_code,i.item_type,i.item_name,q.situation,q.end_date,q.test_quantity,q.err_quantity,q.pass_quantity,((q.err_quantity/(q.test_quantity))*100)
		error,q.test_note
		from itemlist i join quality_test q on(i.item_code = q.item_code) join emp
		e on(q.emp_no=e.emp_no)
		where q.situation ='검사완료' and q.test_note ='합격' and (q.err_quantity/q.test_quantity)*100 between 0
		and 9

	</select>





	<select id="qualityList" parameterType = "SearchDTO" resultType="QualityVO">
		select test_code, MR_ORDER_DET_CODE, a.item_Code, item_Name,
		situation, test_Quantity, test_Note, item_type
		from quality_test a join itemlist b
		on a.item_code = b.item_code
		where situation = '검사대기'

		<include refid="criteria"></include>

		order by test_code
	</select>

	<select id="getCheckList" resultType="CheckListVO">
		select checklist_code, test_name, fac_name, test_standard from checklist
		where item_code = #{itemCode}

	</select>




	<update id="updateQuality" parameterType="QualityVO">
		update Quality_test
		set end_date = sysdate,
		err_quantity = #{errQuantity},
		pass_quantity = #{testQuantity} - #{errQuantity},
		defective_rate = #{errQuantity} / #{testQuantity}*100,
		situation = '검사완료',
		test_note = '합격',
		emp_no = #{empNo}
		where test_code = #{testCode}
		
	</update>

	<update id="samUpdateQuality" parameterType="QualityVO">
		update Quality_test
		set end_date = sysdate,
		err_Quantity = #{errQuantity},
		pass_quantity = (#{testQuantity} - #{errQuantity}),
		defective_rate = (#{errQuantity} / #{testQuantity} * 100),
		situation = '검사완료',
		test_note = #{testNote},
		emp_no = #{empNo}

		where test_Code = #{testCode}
	</update>


	<insert id="insertHistory" parameterType="TestHistoryVO">
		insert into test_history values (history_seq.nextval, #{checklistCode},
		#{testResult}, #{mrCount}, #{testCode})
	</insert>


	<select id="getPassQualityList" parameterType = "SearchDTO"  resultType="QualityVO">
		select test_code, MR_ORDER_DET_CODE, a.item_Code, item_Name,situation,
		test_Quantity, test_Note, item_type,
		PASS_QUANTITY,err_QUANTITY,DEFECTIVE_RATE, c.emp_name
		from quality_test a full outer join itemlist b
		on (a.item_code = b.item_code) join emp c
		on(a.emp_no = c.emp_no)
		where situation = '검사완료'
		and test_note = '합격'
				<include refid="criteria"></include>
		
		order by test_code desc
	</select>


	<select id="getErrQualityList" parameterType = "SearchDTO"  resultType="QualityVO">
		select test_code, MR_ORDER_DET_CODE, a.item_Code, item_Name,situation,
		test_Quantity, test_Note, item_type,
		PASS_QUANTITY,err_QUANTITY,DEFECTIVE_RATE, c.emp_name
		from quality_test a full outer join itemlist b
		on (a.item_code = b.item_code) join emp c
		on(a.emp_no = c.emp_no)
		where situation = '검사완료'
		and test_note = '불합격'
				<include refid="criteria"></include>
		
		order by test_code desc
	</select>

	<select id="getHistoryList" resultType="TestHistoryVO">
		select test_history_code, a.checklist_code, test_result, mr_count,
		test_code, b.test_name, fac_name, test_standard
		from test_history a join checklist b
		on a.checklist_code = b.checklist_code
		where test_code = #{testCode}
	</select>

	<update id="updateHistory">
		update test_history
		set test_result = #{testResult},
		mr_count = #{mrCount}
		where test_history_code = #{testHistoryCode}
	</update>


	<update id="cancelTest">
		update Quality_test
		set situation = '검사대기',
		test_note = null,
		err_quantity = null,
		pass_quantity = null,
		defective_rate = null
		where test_code = #{testCode}
	</update>

	<delete id="deleteTestHistory">
		delete from test_history where test_history_code = #{testHistoryCode}
	</delete>

	<insert id="insertCheckList" parameterType="CheckListVO">
		insert into CHECKLIST (CHECKLIST_CODE, TEST_NAME, FAC_NAME, TEST_STANDARD,
		ITEM_CODE)
		values( (select Max(checklist_code)+1 from CHECKLIST), #{testName},
		#{facName}, #{testStandard}, #{itemCode})
	</insert>

	<update id="updateCheckList" parameterType="CheckListVO">
		update CHECKLIST
		set TEST_NAME = #{testName},
		FAC_NAME = #{facName},
		TEST_STANDARD = #{testStandard},
		ITEM_CODE = #{itemCode}
		where CHECKLIST_CODE = #{checklistCode}
	</update>


	<delete id="deleteCheckList">
		delete from checklist where checklist_code= #{checklistCode}
	</delete>

</mapper>