<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.mes.jss.sale.mapper.FinishedMapper">

	<select id="passItem" resultType="FinishedVO">
		select p.performance_id, 
		       p.item_code, 
		       i.item_name, 
		       p.end_time, 
		       p.pass_item,
		       p.worker
				from performance p 
		        join itemlist i on (p.item_code = i.item_code)
                join work_bom w ON (p.wbom_id = w.wbom_id)
		       where ((per_status = '입고취소' and end_time is not null) or (per_status is null and end_time is not null))
		       and w.pro_code = (
                  SELECT pro_code
                  FROM process
                  WHERE pro_name = '완제품 포장')
	</select>
	
	<select id="fRegister" statementType="CALLABLE">
		{
			CALL finished_register(
				#{worker, mode=IN, jdbcType=VARCHAR},
				#{performanceId, mode=IN, jdbcType=VARCHAR},
				#{itemCode, mode=IN, jdbcType=VARCHAR},
				#{passItem, mode=IN, jdbcType=VARCHAR}
			)
		}
	</select>
	
	<select id="storeInItem" resultType = "FinishedVO">
		select distinct f.performance_id, 
		   f.item_code, 
		   i.item_name, 
		   f.fn_store_in, 
		  f.fn_count, 
		   f.fn_lot_no, 
		   f.fn_expiration,
           e.emp_no,
           e.emp_name
			from finished f join itemlist i on(f.item_code = i.item_code)
						    join emp e on(f.emp_no = e.emp_no)
			where item_type = 'FIN'
		    order by 1
            
	</select>
	
	<select id="delFinished" statementType="CALLABLE">
		
		{
			CALL del_finished(
				#{fnLotNo},
				#{performanceId}
			)
		}

	</select>
	
	<!-- 완제품 입고 조회 -->
	
	<select id="entStoreIn" parameterType="FinishedVO" resultType="FinishedVO">
		select p.performance_id, 
			   p.pass_item, 
			   i.item_name, 
			   f.fn_lot_no, 
			   f.fn_store_in,
			   p.worker
		from performance p join itemlist i on(p.item_code = i.item_code)
                   join finished f on(p.performance_id = f.performance_id)
		where per_status = '입고완료'
	</select>
	
	<select id="storeIn" parameterType="FinishedVO" resultType="FinishedVO">
		select *
		from(
		select p.performance_id, 
			   p.pass_item, 
			   i.item_name, 
			   f.fn_lot_no, 
			   f.fn_store_in,
			   p.worker
		from performance p join itemlist i on(p.item_code = i.item_code)
                   join finished f on(p.performance_id = f.performance_id)
	
		<where>
			<if test='itemName != null and itemName != ""'>
				and i.item_name = #{itemName}
			</if>
			<if test='inDate1 != null and inDate2 != null'>
				and f.fn_store_in between #{inDate1} and #{inDate2}
			</if>
			
			and p.per_status = '입고완료'
		</where>
		)
	</select> 
	
	<select id="showSearItem" parameterType="FinishedVO" resultType="FinishedVO">
		select item_code, item_name
		from itemlist
		where item_name like '%' || #{itemName} || '%' and item_type = 'FIN'
		
	</select> 
	
	<!-- 완제품 재고 조회 -->
	<select id="entStock" parameterType="FinishedVO" resultType="FinishedVO">
		select f.fn_lot_no, 
				i.item_name, 
				f.fn_count, 
				f.fn_store_in, 
				f.fn_expiration, 
				p.end_time,
				e.emp_name
		from finished f join itemlist i on(f.item_code = i.item_code)
                join emp e on(f.emp_no = e.emp_no)
                join performance p on(p.performance_id = f.performance_id)
	</select>
	
	<select id="finStock" parameterType="FinishedVO" resultType="FinishedVO">
		select *
		from(
			select f.fn_lot_no, 
				i.item_name, 
				f.fn_count, 
				f.fn_store_in, 
				f.fn_expiration, 
				p.end_time,
				e.emp_name
		    from finished f join itemlist i on(f.item_code = i.item_code)
                			join emp e on(f.emp_no = e.emp_no)
                			join performance p on(p.performance_id = f.performance_id)
        <where>
        	<if test='stockName != null and stockName != ""'>
        		and i.item_name = #{itemName}
        	</if>
        	<if test='storeIn1 != null and storeIn2 != null'>
        		and f.fn_store_in between #{storeIn1} and #{storeIn2}
        	</if>
        	<if test='perDate1 != null and perDate2 != null'>
        		and p.end_time between #{perDate1} and #{perDate2}
        	</if>
        </where>
		)
	</select>


</mapper>